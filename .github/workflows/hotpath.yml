name: profile-on-pr

on:
  pull_request_target:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  profile:
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-targets: true
          cache-bin: true

      - name: Download cryo binary from release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p ~/.cargo/bin
          gh release download cryo-release -p cryo -D ~/.cargo/bin --repo ${{ github.event.pull_request.base.repo.full_name }}
          chmod +x ~/.cargo/bin/cryo

      - name: Download SQLite DB from release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p ~/.mevlog
          gh release download sqlite-db-release -p mevlog-sqlite-v4.db -D ~/.mevlog --repo ${{ github.event.pull_request.base.repo.full_name }}

      - id: head_timing_metrics
        env:
          ETH_RPC_URL: ${{ secrets.ETH_RPC_URL }}
        run: |
          # Extract timing metrics from head branch
          # 1. Build up file cache
          QUIET=1 cargo run --release --bin mevlog search -b 23263469:23263489 --chain-id 1 --skip-verify-chain-id --native-token-price 3000
          {
            echo 'metrics<<EOF'
            # 2. Generate metrics
            QUIET=1 cargo run --features 'hotpath,hotpath-ci' --release --bin mevlog search -b 23263469:23263489 --chain-id 1 --skip-verify-chain-id --native-token-price 3000 --rpc-url https://eth.merkle.io | grep '^{"hotpath_profiling_mode"'
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - id: base_timing_metrics
        env:
          ETH_RPC_URL: ${{ secrets.ETH_RPC_URL }}
        run: |
          # Extract timing metrics from base branch
          git checkout ${{ github.event.pull_request.base.sha }}
          # 1. Build up filecache
          QUIET=1 cargo run --release --bin mevlog search -b 23263469:23263489 --chain-id 1 --skip-verify-chain-id --native-token-price 3000 --rpc-url https://eth.merkle.io
          {
            echo 'metrics<<EOF'
            # 2. Generate metrics
            QUIET=1 cargo run --features 'hotpath,hotpath-ci' --release --bin mevlog search -b 23263469:23263489 --chain-id 1 --skip-verify-chain-id --native-token-price 3000 --rpc-url https://eth.merkle.io | grep '^{"hotpath_profiling_mode"'
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - id: head_alloc_metrics
        env:
          ETH_RPC_URL: ${{ secrets.ETH_RPC_URL }}
        run: |
          # Extract alloc metrics from head branch
          git checkout ${{ github.event.pull_request.head.ref }}
          # 1. Build up cache
          QUIET=1 cargo run --release --bin mevlog search -b 23263469:23263489 --chain-id 1 --skip-verify-chain-id --native-token-price 3000
          {
            echo 'metrics<<EOF'
            # 2. Generate metrics
            QUIET=1 cargo run --features 'hotpath,hotpath-ci,hotpath-alloc-count-total' --release --bin mevlog search -b 23263469:23263489 --chain-id 1 --skip-verify-chain-id --native-token-price 3000 | grep '^{"hotpath_profiling_mode"'
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - id: base_alloc_metrics
        env:
          ETH_RPC_URL: ${{ secrets.ETH_RPC_URL }}
        run: |
          # Extract alloc metrics from base branch
          git checkout ${{ github.event.pull_request.base.sha }}
          # 1. Build up cache
          QUIET=1 cargo run --release --bin mevlog search -b 23263469:23263489 --chain-id 1 --skip-verify-chain-id --native-token-price 3000
          {
            echo 'metrics<<EOF'
            # 2. Generate metrics
            QUIET=1 cargo run --features 'hotpath,hotpath-ci,hotpath-alloc-count-total' --release --bin mevlog search -b 23263469:23263489 --chain-id 1 --skip-verify-chain-id --native-token-price 3000 --rpc-url https://eth.merkle.io | grep '^{"hotpath_profiling_mode"'
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Save metrics to artifact
        run: |
          mkdir -p /tmp/metrics
          echo '${{ steps.head_timing_metrics.outputs.metrics }}' > /tmp/metrics/head_timing.json
          echo '${{ steps.base_timing_metrics.outputs.metrics }}' > /tmp/metrics/base_timing.json
          echo '${{ steps.head_alloc_metrics.outputs.metrics }}' > /tmp/metrics/head_alloc.json
          echo '${{ steps.base_alloc_metrics.outputs.metrics }}' > /tmp/metrics/base_alloc.json
          echo '${{ github.event.pull_request.number }}' > /tmp/metrics/pr_number.txt

      - uses: actions/upload-artifact@v4
        with:
          name: profile-metrics
          path: /tmp/metrics/
          retention-days: 1

  comment:
    runs-on: ubuntu-latest
    needs: profile
    # Only run if profile job ran (skips for forks)
    if: github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: profile-metrics
          path: /tmp/metrics/

      - name: Install hotpath CLI
        run: cargo install hotpath

      - name: Post timing PR comment
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          HEAD_METRICS=$(cat /tmp/metrics/head_timing.json)
          BASE_METRICS=$(cat /tmp/metrics/base_timing.json)
          PR_NUMBER=$(cat /tmp/metrics/pr_number.txt)
          hotpath profile-pr \
            --head-metrics "$HEAD_METRICS" \
            --base-metrics "$BASE_METRICS" \
            --github-token "$GH_TOKEN" \
            --pr-number "$PR_NUMBER"

      - name: Post alloc PR comment
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          HEAD_METRICS=$(cat /tmp/metrics/head_alloc.json)
          BASE_METRICS=$(cat /tmp/metrics/base_alloc.json)
          PR_NUMBER=$(cat /tmp/metrics/pr_number.txt)
          hotpath profile-pr \
            --head-metrics "$HEAD_METRICS" \
            --base-metrics "$BASE_METRICS" \
            --github-token "$GH_TOKEN" \
            --pr-number "$PR_NUMBER"
